Menu="FileActivity:1"
Title="Settings"
---
<?php
/* Copyright 2017-2025, Dan Landon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */

/* Define our plugin name. */
define('FILE_ACTIVITY_PLUGIN', 'file.activity');

/* Define the docroot path. */
if (!defined('DOCROOT')) {
	define('DOCROOT', $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp');
}

/* Parse the plugin config file. */
$file_activity_cfg	= parse_plugin_cfg(FILE_ACTIVITY_PLUGIN, true);
?>

<script>
$(function() {
	showStatus('pid','file.activity');

	if ( typeof caPluginUpdateCheck === "function" ) {
		caPluginUpdateCheck("file.activity.plg");
	}
});
</script>

<table class="tablesorter shift ups">
<thead><tr><th>_(File Activity Settings)_</th></tr></thead>
</table>

<?if ($var['mdState']=="STARTED"):?>
:file_activity_loggging_plug:
> File Activity Monitoring:
>
> File open, read, write, and modify activity is monitored and logged on the array using inotify and is displayed by disk or share, UD disks, and cache.
> You need to start the File Activity in order to log the disk activity.
> File Activity is intended to be running for short periods so you can check disk activity.
> A server with a lot of file activity can fill the log space.
> The 'appdata', 'docker', 'syslogs', and 'system' directories (case insensitive) are excluded.
> **SSD devices are not monitored.**
>
> Note: File Activity monitoring is stopped if the array is stopped, and will restart when the array is started if it is enabled.
:end

<div>
<form markdown="1" name="file_activity" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" name="#file" value="file.activity/file.activity.cfg">
<input type="hidden" name="#command" value="/plugins/file.activity/scripts/rc.file.activity">
<input type="hidden" name="#arg[1]" value="update">

_(Enable File Activity Monitoring)_?
: <select name="SERVICE" size="1">
	<?=mk_option($file_activity_cfg['SERVICE'], "disable", "_(No)_");?>
	<?=mk_option($file_activity_cfg['SERVICE'], "enable", "_(Yes)_");?>
  </select>

:file_activity_enable_logging_plug:
> Set to **Yes** to enable File Activity monitoring when the server is started.
:end

_(Enable for SSD Devices)_?
: <select name="INCLUDE_SSD" size="1">
	<?=mk_option($file_activity_cfg['INCLUDE_SSD'], "no", "_(No)_");?>
	<?=mk_option($file_activity_cfg['INCLUDE_SSD'], "yes", "_(Yes)_");?>
  </select>

:file_activity_enable_ssd_plug:
> Set to **Yes** to enable File Activity monitoring for any SSD Devices, otherwise only Spinning Devices are monitored.
>
> Monitoring SSD devices can overwhelm the server from hyper activity on SSDs.
:end

_(Enable for Unassigned Devices)_?
: <select name="INCLUDE_UD" size="1">
	<?=mk_option($file_activity_cfg['INCLUDE_UD'], "yes", "_(Yes)_");?>
	<?=mk_option($file_activity_cfg['INCLUDE_UD'], "no", "_(No)_");?>
  </select>

:file_activity_enable_ud_plug:
> Set to **Yes** to enable File Activity monitoring for Unassigned Devices if the Unassigned Devices plugin is installed.
:end

_(Enable for Cache and Pool Disks)_?
: <select name="INCLUDE_CACHE" size="1">
	<?=mk_option($file_activity_cfg['INCLUDE_CACHE'], "no", "_(No)_");?>
	<?=mk_option($file_activity_cfg['INCLUDE_CACHE'], "yes", "_(Yes)_");?>
  </select>

:file_activity_enable_cache_plug:
> Set to **Yes** to enable File Activity monitoring for the Cache and Pool Disks.
:end

_(Display Events)_ :
: <input type="text" name="DISPLAY_EVENTS" class="narrow" maxlength="4" value="<?=htmlspecialchars($file_activity_cfg['DISPLAY_EVENTS']);?>" placeholder="25">

:file_activity_display_events_plug:
> This is the number of file events shown on disks and shares from the File Activity log for each share or disk.
:end

<input type="submit" name="#default" value="_(Default)_" title="Load and apply default values.">
: <input type="submit" name="#apply" value="_(Apply)_"><input type="button" value="_(Done)_" onclick="done()">
</form>
</div>
<?else:?>
	<p>Array is stopped!</p>
<?endif;?>

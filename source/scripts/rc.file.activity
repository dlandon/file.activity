#!/bin/bash
#
# Copyright 2020-2025, Dan Landon
#
# Permission is granted to use this software for personal, educational, or internal use only.
#
# Commercial use, redistribution, or modification of this software or any derived works is strictly prohibited without prior written permission.
#
# Usage:
# start|stop|clear|update.

file_activity_start() {
	# Is file activity running?
	if [ ! -e "/var/run/${plugin}.pid" ]; then
		echo "Starting File Activity..."
		logger "Starting File Activity" -t"$PROG_NAME"

		# Start inotify script to monitor disk events
		/usr/local/emhttp/plugins/file.activity/scripts/inotify.file.activity >/dev/null 2>&1 & disown

		# Create pid to show file activity is running.
		echo $$ > /var/run/${plugin}.pid

		sleep 2
	else
		echo "File Activity already running"
		logger "File Activity already running" -t"$PROG_NAME"
	fi
}

file_activity_stop() {
	# Is the files active inotify script running?
	if [ -e "/var/run/${plugin}.pid" ]; then
		echo "Stopping File Activity..."
		logger "Stopping File Activity" -t"$PROG_NAME"

		# Kill all file activity processes.
		for pid in $(ps -eo pid,cmd | grep 'inotifywait' | grep 'file.activity' | grep -v grep | awk '{print $1}')
		do
			kill $pid >/dev/null 2>&1
		done	

		# Remove pid file to show file activity is not running.
		rm -f /var/run/${plugin}.pid

		sleep 2
	fi
}

file_activity_clear() {
	# Clear the file activity log.
	echo "" > /var/log/file.activity.log
}

file_activity_update() {
	file_activity_stop

	# Start file activity if service is enabled.
	if [ "$SERVICE" = "enable" ]; then
		file_activity_start
	fi
}

plugin="file.activity"
CONFIG="/boot/config/plugins/${plugin}/${plugin}.cfg"
source $CONFIG
PROG_NAME=${plugin}

case "$1" in
	'start')
		# The second parameter is a startup delay.
		if [[ -n "$2" && "$2" =~ ^[0-9]+$ ]]; then
			logger "Waiting ${2} seconds before starting." -t"$PROG_NAME"
			sleep "$2"
		fi
		file_activity_start
	;;
	'stop')
		file_activity_stop
	;;
	'clear')
		file_activity_clear
	;;
	'update')
		file_activity_update
	;;
	*)
		echo "usage $0 start|stop|clear|update"
esac
